# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Auth {
  """JWT Bearer token"""
  token: String!
  user: User!
}

type Comment {
  id: String!
  createdAt: Date!
  text: String!
  author: Profile!
  post: Post!
}

input CreateCommentInput {
  postId: String!
  text: String!
}

input CreatePostInput {
  text: String!
}

input CreateUserInput {
  username: String!
  email: String!
  name: String
  avatar: String
  password: String!
}

"""Date custom scalar type"""
scalar Date

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  updateUser(data: UpdateUserInput!, id: String!): User!
  updateUserPassword(data: UpdateUserPasswordInput!, id: String!): User!
  deleteUser(id: String!): Boolean!
  register(data: RegisterInput!): Auth!
  login(data: LoginInput!): Auth!
  createComment(data: CreateCommentInput!): Comment!
  deleteComment(id: String!): Comment!
  createPost(data: CreatePostInput!): Post!
  deletePost(id: String!): Post!
}

type Post {
  id: String!
  createdAt: Date!
  text: String!
  author: Profile!
  commentCount: Float!
  commentedBy: [Profile!]
  comments: [Comment!]!
}

type Profile {
  id: String!
  createdAt: Date!
  username: String
  name: String
  avatar: String
  bio: String
  location: String
  posts: [Post!]
}

type Query {
  hello(name: String!): String!
  uptime: Float!
  me: User!
  users(skip: Int, after: String, before: String, first: Int, last: Int, query: String): [User!]!
  user(id: String!): User!
  comments(postId: String!): [Comment!]!
  posts: [Post!]!
  userPosts(userId: String!): [Post!]!
  post(id: String!): Post!
  profiles: [Profile!]!
  profile(username: String!): Profile!
}

input RegisterInput {
  username: String!
  email: String!
  name: String
  avatar: String
  password: String!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input UpdateUserInput {
  username: String!
  email: String!
  name: String
  avatar: String
}

input UpdateUserPasswordInput {
  password: String!
}

type User {
  id: String!
  createdAt: Date!
  updatedAt: Date!
  email: String!
  username: String
  name: String
  avatar: String
  role: Role!
}
